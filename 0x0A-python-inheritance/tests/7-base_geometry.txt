The "7-base_geometry" module
============================

Functions:
--------------
def area(self):
---------------
def integer_validator(self, name, value):


Import BaseGeometry from "7-base_geometry" module
    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Create a class object
    >>> x = BaseGeometry()

Check for class documentation
    >>> len(BaseGeometry.__doc__) > 1
    True

Check for module documentation
    >>> len(__import__("7-base_geometry").__doc__) > 1
    True

Check for function documentation
    >>> len(BaseGeometry.area.__doc__) > 1
    True
    >>> len(BaseGeometry.integer_validator.__doc__) > 1
    True

Check for not an integer
    >>> x.integer_validator("name", "John")
    Traceback (most recent call last):
    ...
    TypeError: name must be an integer

Check for int greater than or equal to 0
    >>> x.integer_validator("age", 0)
    Traceback (most recent call last):
    ...
    ValueError: age must be greater than 0
    >>> x.integer_validator("distance", -4)
    Traceback (most recent call last):
    ...
    ValueError: distance must be greater than 0

Check for def area(self)
    >>> x.area()
    Traceback (most recent call last):
    ...
    Exception: area() is not implemented
